basePath: /
definitions:
  domain.CustomerInput:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      twitterID:
        type: string
    required:
    - email
    - firstName
    - lastName
    type: object
  handler.Customer:
    description: Details of a customer
    properties:
      EDI:
        type: string
      GLN:
        type: string
      PeppolID:
        type: string
      address:
        type: string
      address2:
        type: string
      addressTypeID:
        type: integer
      addressTypeName:
        type: string
      birthday:
        type: string
      city:
        type: string
      code:
        type: string
      colorStatus:
        type: string
      companyName:
        type: string
      companyTypeID:
        type: integer
      country:
        type: string
      countryID:
        type: string
      credit:
        type: integer
      creditCardLastNumbers:
        type: string
      customerBalanceDisabled:
        type: integer
      customerCardNumber:
        type: string
      customerID:
        type: integer
      customerType:
        type: string
      deliveryTypeID:
        type: integer
      doNotSell:
        type: integer
      docuraEDIEnabled:
        type: integer
      eInvoiceEmail:
        type: string
      eInvoiceEnabled:
        type: integer
      eInvoiceReference:
        type: string
      ediType:
        type: string
      email:
        type: string
      emailEnabled:
        type: integer
      emailOptOut:
        type: integer
      euCustomerType:
        type: string
      externalIDs:
        items: {}
        type: array
      facebookName:
        type: string
      factoringContractNumber:
        type: string
      fax:
        type: string
      firstName:
        type: string
      flagStatus:
        type: integer
      fullName:
        type: string
      gender:
        type: string
      groupID:
        type: integer
      groupName:
        type: string
      homeStoreID:
        type: integer
      id:
        type: integer
      image:
        type: string
      integrationCode:
        type: string
      isPOSDefaultCustomer:
        type: integer
      lastModifierEmployeeID:
        type: integer
      lastModifierUsername:
        type: string
      lastName:
        type: string
      mailEnabled:
        type: integer
      mobile:
        type: string
      operatorIdentifier:
        type: string
      partialTaxExemption:
        type: integer
      payerID:
        type: integer
      paysViaFactoring:
        type: integer
      personTitleID:
        type: integer
      phone:
        type: string
      posCouponsDisabled:
        type: integer
      postalCode:
        type: string
      referenceNumber:
        type: string
      rewardPoints:
        type: integer
      rewardPointsDisabled:
        type: integer
      salesBlocked:
        type: integer
      signUpStoreID:
        type: integer
      state:
        type: string
      street:
        type: string
      taxExempt:
        type: integer
      twitterID:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Service provides two endpoints to manage Erply customers. It connects
    to a local PostgreSQL database and an external Erply service for user authentication
    and reading/writing customer data.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Erply service API
  version: "1.0"
paths:
  /customer:
    post:
      consumes:
      - application/json
      description: Add a new customer
      operationId: add-customer
      parameters:
      - description: Add Customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/domain.CustomerInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "502":
          description: Bad Gateway
      summary: Add a customer
  /customer/{id}:
    get:
      consumes:
      - application/json
      description: Get a customer by ID
      operationId: get-customer
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Customer'
        "500":
          description: Internal Server Error
      summary: Get a customer
swagger: "2.0"
